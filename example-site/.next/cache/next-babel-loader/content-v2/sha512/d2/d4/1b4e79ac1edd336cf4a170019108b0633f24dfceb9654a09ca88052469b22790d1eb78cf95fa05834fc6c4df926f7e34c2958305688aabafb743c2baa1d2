{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshuabevers/git/cacti-term/example-site/pages/examples.tsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Layout from \"../components/layout\"; // Examples\n\nimport HelloWorldExample from \"../examples/hello-world\";\nimport BasicGameExample from \"../examples/basic-game\";\nimport BasicFOVExample from \"../examples/fov/basic-fov\";\nimport CellularAutomataExample from \"../examples/generation/cellular\";\nimport DrunkardsWalkExample from \"../examples/generation/drunkards-walk\";\nimport MouseInputExample from \"../examples/input/mouse-input\";\nimport MouseInputFont from \"../examples/input/mouse-input-font\";\nimport AStarExample from \"../examples/pathfinding/astar\";\nimport Dijkstra from \"../examples/pathfinding/dijkstra\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 250,\n    backgroundColor: theme.palette.background.paper,\n    borderRight: \"1px solid #ddd\"\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  layout: {\n    display: \"flex\"\n  },\n  exampleCard: {\n    marginLeft: \"20px\",\n    marginTop: \"20px\"\n  }\n}));\nconst MenuData = {\n  General: {\n    \"Hello World\": /*#__PURE__*/_jsxDEV(HelloWorldExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, this),\n    \"Basic Game\": /*#__PURE__*/_jsxDEV(BasicGameExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this)\n  },\n  Input: {\n    Mouse: /*#__PURE__*/_jsxDEV(MouseInputExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this),\n    \"Mouse - Font\": /*#__PURE__*/_jsxDEV(MouseInputFont, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this)\n  },\n  FOV: {\n    \"Basic FOV\": /*#__PURE__*/_jsxDEV(BasicFOVExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this)\n  },\n  Generation: {\n    \"Cellular Automata\": /*#__PURE__*/_jsxDEV(CellularAutomataExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this),\n    \"Drunkards Walk\": /*#__PURE__*/_jsxDEV(DrunkardsWalkExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this)\n  },\n  Pathfinding: {\n    AStar: /*#__PURE__*/_jsxDEV(AStarExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this),\n    Dijkstra: /*#__PURE__*/_jsxDEV(Dijkstra, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this)\n  }\n};\nexport default function Examples() {\n  const classes = useStyles();\n  const {\n    0: Example,\n    1: setExample\n  } = useState( /*#__PURE__*/_jsxDEV(HelloWorldExample, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 42\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.layout,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        className: classes.root,\n        children: Object.entries(MenuData).map(([section, examples]) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: section\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            component: \"div\",\n            disablePadding: true,\n            children: Object.entries(examples).map(([example, component]) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              className: classes.nested,\n              onClick: () => {\n                setExample(component);\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: example\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), Example && /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.exampleCard,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: Example\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshuabevers/git/cacti-term/example-site/pages/examples.tsx"],"names":["React","useState","makeStyles","List","ListItem","ListItemText","Divider","Card","CardContent","Layout","HelloWorldExample","BasicGameExample","BasicFOVExample","CellularAutomataExample","DrunkardsWalkExample","MouseInputExample","MouseInputFont","AStarExample","Dijkstra","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","borderRight","nested","paddingLeft","spacing","layout","display","exampleCard","marginLeft","marginTop","MenuData","General","Input","Mouse","FOV","Generation","Pathfinding","AStar","Examples","classes","Example","setExample","Object","entries","map","section","examples","example","component"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Layout from \"../components/layout\";\n\n// Examples\nimport HelloWorldExample from \"../examples/hello-world\";\nimport BasicGameExample from \"../examples/basic-game\";\n\nimport BasicFOVExample from \"../examples/fov/basic-fov\";\nimport CellularAutomataExample from \"../examples/generation/cellular\";\nimport DrunkardsWalkExample from \"../examples/generation/drunkards-walk\";\n\nimport MouseInputExample from \"../examples/input/mouse-input\";\nimport MouseInputFontExample from \"../examples/input/mouse-input-font\";\nimport MouseInputFont from \"../examples/input/mouse-input-font\";\nimport AStarExample from \"../examples/pathfinding/astar\";\nimport Dijkstra from \"../examples/pathfinding/dijkstra\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 250,\n    backgroundColor: theme.palette.background.paper,\n    borderRight: \"1px solid #ddd\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  layout: {\n    display: \"flex\",\n  },\n  exampleCard: {\n    marginLeft: \"20px\",\n    marginTop: \"20px\",\n  },\n}));\n\ninterface IMenuData {\n  [index: string]: {\n    [index: string]: JSX.Element;\n  };\n}\nconst MenuData: IMenuData = {\n  General: {\n    \"Hello World\": <HelloWorldExample />,\n    \"Basic Game\": <BasicGameExample />,\n  },\n  Input: {\n    Mouse: <MouseInputExample />,\n    \"Mouse - Font\": <MouseInputFont />,\n  },\n  FOV: {\n    \"Basic FOV\": <BasicFOVExample />,\n  },\n  Generation: {\n    \"Cellular Automata\": <CellularAutomataExample />,\n    \"Drunkards Walk\": <DrunkardsWalkExample />,\n  },\n  Pathfinding: {\n    AStar: <AStarExample />,\n    Dijkstra: <Dijkstra />\n  },\n};\n\nexport default function Examples() {\n  const classes = useStyles();\n\n  const [Example, setExample] = useState(<HelloWorldExample />);\n\n  return (\n    <Layout>\n      <div className={classes.layout}>\n        <List component=\"nav\" className={classes.root}>\n          {Object.entries(MenuData).map(([section, examples]) => (\n            <>\n              <ListItem>\n                <ListItemText primary={section} />\n              </ListItem>\n              <List component=\"div\" disablePadding>\n                {Object.entries(examples).map(([example, component]) => (\n                  <ListItem\n                    button\n                    className={classes.nested}\n                    onClick={() => {\n                      setExample(component);\n                    }}\n                  >\n                    <ListItemText primary={example} />\n                  </ListItem>\n                ))}\n              </List>\n              <Divider />\n            </>\n          ))}\n        </List>\n        {Example && (\n          <Card className={classes.exampleCard}>\n            <CardContent>{Example}</CardContent>\n          </Card>\n        )}\n      </div>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}