{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/joshuabevers/git/cacti-term/example-site/examples/basic-game.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Glyph, Terminal, Input, Color, CharCode, Generation, GUI, Rand } from \"malwoden\";\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var mount = document.getElementById(\"example\");\n      var terminal = new Terminal.RetroTerminal({\n        width: 48,\n        height: 30,\n        imageURL: \"/font_16.png\",\n        charWidth: 16,\n        charHeight: 16,\n        mountNode: mount\n      }); // Generate Map\n\n      var map_width = 30;\n      var map_height = 20;\n      var map = new Generation.CellularAutomata(map_width, map_height);\n      map.randomize(0.7);\n      map.doSimulationStep();\n      var open = [];\n\n      for (var x = 0; x < map.table.width; x++) {\n        for (var y = 0; y < map.table.height; y++) {\n          if (map.table.get({\n            x: x,\n            y: y\n          }) === 0) open.push({\n            x: x,\n            y: y\n          });\n        }\n      }\n\n      var rng = new Rand.AleaRNG();\n      var start = rng.nextItem(open);\n      var coinPos = rng.nextItem(open);\n      var logs = [];\n\n      var addLog = function addLog(txt) {\n        logs.push(txt);\n\n        while (logs.length > 5) {\n          logs.shift();\n        }\n      };\n\n      addLog(\"Collect Coins!\"); // Entities\n\n      var player = {\n        x: start.x,\n        y: start.y,\n        hp: 10,\n        coins: 0\n      };\n      var coin = {\n        x: coinPos.x,\n        y: coinPos.y\n      };\n\n      function collectCoin() {\n        player.coins++;\n        var newPos = rng.nextItem(open);\n        coin.x = newPos.x;\n        coin.y = newPos.y;\n        addLog(\"Coin!\");\n      }\n\n      function move(dx, dy) {\n        var x = player.x + dx;\n        var y = player.y + dy;\n\n        if (map.table.isInBounds({\n          x: x,\n          y: y\n        }) && map.table.get({\n          x: x,\n          y: y\n        }) === 0) {\n          player.x = x;\n          player.y = y;\n        }\n      } // Keyboard\n\n\n      var keyboard = new Input.KeyboardHandler();\n      var movement = new Input.KeyboardContext().onDown(Input.KeyCode.DownArrow, function () {\n        return move(0, 1);\n      }).onDown(Input.KeyCode.LeftArrow, function () {\n        return move(-1, 0);\n      }).onDown(Input.KeyCode.RightArrow, function () {\n        return move(1, 0);\n      }).onDown(Input.KeyCode.UpArrow, function () {\n        return move(0, -1);\n      });\n      keyboard.setContext(movement); // ToDo - Fix this API. 2 Vectors?\n\n      var mapterminal = terminal.port({\n        x: 17,\n        y: 1\n      }, map_width, map_height);\n\n      var loop = function loop(delta) {\n        // Logic\n        if (player.x === coin.x && player.y === coin.y) {\n          collectCoin();\n        } // Rendering\n\n\n        terminal.clear(); // Player Box\n\n        GUI.box(terminal, {\n          title: \"Player\",\n          x1: 0,\n          x2: 15,\n          y1: 0,\n          y2: 21\n        }); // HP\n\n        terminal.writeAt({\n          x: 2,\n          y: 2\n        }, \"HP : \".concat(player.hp, \"/10\"), Color.Red);\n        terminal.writeAt({\n          x: 2,\n          y: 4\n        }, \"Gold : \".concat(player.coins), Color.Yellow); // World Box\n\n        GUI.box(terminal, {\n          x1: 16,\n          x2: 16 + 31,\n          y1: 0,\n          y2: 21\n        }); // Logs\n\n        GUI.box(terminal, {\n          title: \"Log\",\n          x1: 0,\n          x2: 16 + 31,\n          y1: 22,\n          y2: 29\n        });\n\n        for (var i = 0; i < logs.length; i++) {\n          terminal.writeAt({\n            x: 1,\n            y: 23 + i\n          }, logs[i]);\n        } // Draw Map\n\n\n        for (var _x = 0; _x < map.table.width; _x++) {\n          for (var _y = 0; _y < map.table.height; _y++) {\n            var isWall = map.table.get({\n              x: _x,\n              y: _y\n            });\n            mapterminal.drawCharCode({\n              x: _x,\n              y: _y\n            }, isWall ? CharCode.blackSpadeSuit : CharCode.space, isWall ? Color.Green : Color.White);\n          }\n        } // Coin\n\n\n        mapterminal.drawGlyph(coin, Glyph.fromCharCode(CharCode.oLower, Color.Yellow)); // Player Entity\n\n        mapterminal.drawGlyph(player, Glyph.fromCharCode(CharCode.at, Color.Yellow));\n        terminal.render();\n        window.requestAnimationFrame(loop);\n      };\n\n      window.requestAnimationFrame(loop);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }, this);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/joshuabevers/git/cacti-term/example-site/examples/basic-game.tsx"],"names":["React","Glyph","Terminal","Input","Color","CharCode","Generation","GUI","Rand","mount","document","getElementById","terminal","RetroTerminal","width","height","imageURL","charWidth","charHeight","mountNode","map_width","map_height","map","CellularAutomata","randomize","doSimulationStep","open","x","table","y","get","push","rng","AleaRNG","start","nextItem","coinPos","logs","addLog","txt","length","shift","player","hp","coins","coin","collectCoin","newPos","move","dx","dy","isInBounds","keyboard","KeyboardHandler","movement","KeyboardContext","onDown","KeyCode","DownArrow","LeftArrow","RightArrow","UpArrow","setContext","mapterminal","port","loop","delta","clear","box","title","x1","x2","y1","y2","writeAt","Red","Yellow","i","isWall","drawCharCode","blackSpadeSuit","space","Green","White","drawGlyph","fromCharCode","oLower","at","render","window","requestAnimationFrame","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Glyph,\n  Terminal,\n  Input,\n  Color,\n  CharCode,\n  Generation,\n  GUI,\n  Rand,\n} from \"malwoden\";\n\nexport default class extends React.Component {\n  componentDidMount() {\n    const mount = document.getElementById(\"example\");\n    const terminal = new Terminal.RetroTerminal({\n      width: 48,\n      height: 30,\n      imageURL: \"/font_16.png\",\n      charWidth: 16,\n      charHeight: 16,\n      mountNode: mount,\n    });\n\n    // Generate Map\n    const map_width = 30;\n    const map_height = 20;\n    const map = new Generation.CellularAutomata(map_width, map_height);\n    map.randomize(0.7);\n    map.doSimulationStep();\n\n    const open = [];\n    for (let x = 0; x < map.table.width; x++) {\n      for (let y = 0; y < map.table.height; y++) {\n        if (map.table.get({ x, y }) === 0) open.push({ x, y });\n      }\n    }\n    const rng = new Rand.AleaRNG();\n    const start = rng.nextItem(open);\n    const coinPos = rng.nextItem(open);\n\n    const logs: string[] = [];\n    const addLog = (txt: string) => {\n      logs.push(txt);\n      while (logs.length > 5) logs.shift();\n    };\n    addLog(\"Collect Coins!\");\n\n    // Entities\n    const player = {\n      x: start.x,\n      y: start.y,\n      hp: 10,\n      coins: 0,\n    };\n\n    const coin = {\n      x: coinPos.x,\n      y: coinPos.y,\n    };\n\n    function collectCoin() {\n      player.coins++;\n      const newPos = rng.nextItem(open);\n      coin.x = newPos.x;\n      coin.y = newPos.y;\n      addLog(\"Coin!\");\n    }\n\n    function move(dx: number, dy: number) {\n      const x = player.x + dx;\n      const y = player.y + dy;\n      if (map.table.isInBounds({ x, y }) && map.table.get({ x, y }) === 0) {\n        player.x = x;\n        player.y = y;\n      }\n    }\n\n    // Keyboard\n    const keyboard = new Input.KeyboardHandler();\n    const movement = new Input.KeyboardContext()\n      .onDown(Input.KeyCode.DownArrow, () => move(0, 1))\n      .onDown(Input.KeyCode.LeftArrow, () => move(-1, 0))\n      .onDown(Input.KeyCode.RightArrow, () => move(1, 0))\n      .onDown(Input.KeyCode.UpArrow, () => move(0, -1));\n\n    keyboard.setContext(movement);\n\n    // ToDo - Fix this API. 2 Vectors?\n    const mapterminal = terminal.port({ x: 17, y: 1 }, map_width, map_height);\n\n    const loop = (delta: number) => {\n      // Logic\n      if (player.x === coin.x && player.y === coin.y) {\n        collectCoin();\n      }\n\n      // Rendering\n      terminal.clear();\n\n      // Player Box\n      GUI.box(terminal, {\n        title: \"Player\",\n        x1: 0,\n        x2: 15,\n        y1: 0,\n        y2: 21,\n      });\n\n      // HP\n      terminal.writeAt({ x: 2, y: 2 }, `HP : ${player.hp}/10`, Color.Red);\n      terminal.writeAt({ x: 2, y: 4 }, `Gold : ${player.coins}`, Color.Yellow);\n\n      // World Box\n      GUI.box(terminal, {\n        x1: 16,\n        x2: 16 + 31,\n        y1: 0,\n        y2: 21,\n      });\n\n      // Logs\n      GUI.box(terminal, {\n        title: \"Log\",\n        x1: 0,\n        x2: 16 + 31,\n        y1: 22,\n        y2: 29,\n      });\n      for (let i = 0; i < logs.length; i++) {\n        terminal.writeAt({ x: 1, y: 23 + i }, logs[i]);\n      }\n\n      // Draw Map\n      for (let x = 0; x < map.table.width; x++) {\n        for (let y = 0; y < map.table.height; y++) {\n          const isWall = map.table.get({ x, y });\n          mapterminal.drawCharCode(\n            { x, y },\n            isWall ? CharCode.blackSpadeSuit : CharCode.space,\n            isWall ? Color.Green : Color.White\n          );\n        }\n      }\n\n      // Coin\n      mapterminal.drawGlyph(\n        coin,\n        Glyph.fromCharCode(CharCode.oLower, Color.Yellow)\n      );\n      // Player Entity\n      mapterminal.drawGlyph(\n        player,\n        Glyph.fromCharCode(CharCode.at, Color.Yellow)\n      );\n\n      terminal.render();\n\n      window.requestAnimationFrame(loop);\n    };\n    window.requestAnimationFrame(loop);\n  }\n\n  render() {\n    return <div id=\"example\"></div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}