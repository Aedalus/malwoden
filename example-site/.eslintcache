[{"/home/alex/git/malwoden/example-site/src/index.tsx":"1","/home/alex/git/malwoden/example-site/src/reportWebVitals.js":"2","/home/alex/git/malwoden/example-site/src/app.tsx":"3","/home/alex/git/malwoden/example-site/src/components/navbar.tsx":"4","/home/alex/git/malwoden/example-site/src/pages/home.tsx":"5","/home/alex/git/malwoden/example-site/src/pages/examples/index.tsx":"6","/home/alex/git/malwoden/example-site/src/examples/hello-world.tsx":"7","/home/alex/git/malwoden/example-site/src/examples/generation/cellular.tsx":"8","/home/alex/git/malwoden/example-site/src/examples/basic-game.tsx":"9","/home/alex/git/malwoden/example-site/src/examples/generation/drunkards-walk.tsx":"10","/home/alex/git/malwoden/example-site/src/examples/input/mouse-input-font.tsx":"11","/home/alex/git/malwoden/example-site/src/examples/fov/basic-fov.tsx":"12","/home/alex/git/malwoden/example-site/src/examples/pathfinding/astar.tsx":"13","/home/alex/git/malwoden/example-site/src/examples/input/mouse-input.tsx":"14","/home/alex/git/malwoden/example-site/src/examples/pathfinding/dijkstra.tsx":"15"},{"size":500,"mtime":1613271744361,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1613271744365,"results":"18","hashOfConfig":"17"},{"size":570,"mtime":1613271744361,"results":"19","hashOfConfig":"17"},{"size":1682,"mtime":1613271744373,"results":"20","hashOfConfig":"17"},{"size":3203,"mtime":1613271744365,"results":"21","hashOfConfig":"17"},{"size":4570,"mtime":1613272072311,"results":"22","hashOfConfig":"17"},{"size":805,"mtime":1613271744361,"results":"23","hashOfConfig":"17"},{"size":961,"mtime":1613271744373,"results":"24","hashOfConfig":"17"},{"size":4097,"mtime":1613271744373,"results":"25","hashOfConfig":"17"},{"size":1216,"mtime":1613271744373,"results":"26","hashOfConfig":"17"},{"size":976,"mtime":1613271744373,"results":"27","hashOfConfig":"17"},{"size":3825,"mtime":1613271744373,"results":"28","hashOfConfig":"17"},{"size":2349,"mtime":1613271744373,"results":"29","hashOfConfig":"17"},{"size":1554,"mtime":1613271744373,"results":"30","hashOfConfig":"17"},{"size":2376,"mtime":1613273841988,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1hhm0qy",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/home/alex/git/malwoden/example-site/src/index.tsx",[],["65","66"],"/home/alex/git/malwoden/example-site/src/reportWebVitals.js",[],["67","68"],"/home/alex/git/malwoden/example-site/src/app.tsx",[],"/home/alex/git/malwoden/example-site/src/components/navbar.tsx",[],"/home/alex/git/malwoden/example-site/src/pages/home.tsx",[],"/home/alex/git/malwoden/example-site/src/pages/examples/index.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/hello-world.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/generation/cellular.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/basic-game.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/generation/drunkards-walk.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/input/mouse-input-font.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/fov/basic-fov.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/pathfinding/astar.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/input/mouse-input.tsx",[],"/home/alex/git/malwoden/example-site/src/examples/pathfinding/dijkstra.tsx",["69"],"import React, { useEffect } from \"react\";\n\nimport {\n  CharCode,\n  Color,\n  Terminal,\n  Input,\n  Generation,\n  Glyph,\n  Util,\n  Rand,\n  Pathfinding,\n  Vector2,\n} from \"malwoden\";\n\nconst DijkstraExample = () => {\n  const requestRef = React.useRef<number>(NaN);\n\n  useEffect(() => {\n    const mount = document.getElementById(\"example\")!;\n    const width = 48;\n    const height = 30;\n    const terminal = new Terminal.RetroTerminal({\n      width,\n      height,\n      imageURL: \"/font_16.png\",\n      charWidth: 16,\n      charHeight: 16,\n      mountNode: mount,\n    });\n\n    // ToDo\n    const mouse = new Input.MouseHandler();\n    const map = new Generation.CellularAutomata(width, height);\n    map.randomize();\n    map.doSimulationStep(4);\n    map.connect();\n\n    // Get a random free spot\n    const freeSpots: Util.Vector2[] = [];\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const wall = map.table.get({ x, y });\n        if (!wall) freeSpots.push({ x, y });\n      }\n    }\n\n    const player = new Rand.AleaRNG().nextItem(freeSpots)!;\n\n    const dijkstra = new Pathfinding.Dijkstra({\n      isBlockedCallback: (pos) => map.table.get(pos) !== 0,\n      topology: \"eight\",\n    });\n\n    function loop() {\n      terminal.clear();\n\n      // Draw Map\n      for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n          const wall = map.table.get({ x, y });\n          if (wall)\n            terminal.drawGlyph(\n              { x, y },\n              Glyph.fromCharCode(CharCode.blackClubSuit, Color.Green)\n            );\n        }\n      }\n\n      // Draw Mouse\n      const mousePos = mouse.getPos();\n      const tilePos = terminal.pixelToChar(mousePos);\n      terminal.drawCharCode(tilePos, CharCode.asterisk, Color.Cyan);\n\n      // Get path\n      const path = dijkstra.compute(player, tilePos);\n      if (path) {\n        for (let p of path) {\n          terminal.drawCharCode(p, CharCode.asterisk, Color.DarkCyan);\n        }\n      }\n\n      // Draw Player\n      terminal.drawCharCode(player, CharCode.at, Color.Yellow);\n\n      // Render Terminal\n      terminal.render();\n      requestRef.current = requestAnimationFrame(loop);\n    }\n    requestRef.current = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n  return <div id=\"example\"></div>;\n};\n\nexport default DijkstraExample;\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":13,"column":3,"nodeType":"76","messageId":"77","endLine":13,"endColumn":10},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'Vector2' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]